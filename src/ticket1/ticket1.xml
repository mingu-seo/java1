<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ticket1">
    
    <typeAlias alias="ticket1VO" type="ticket1.Ticket1VO"/>
    
    <!-- 공통조건 -->
	<sql id="searchSql">		
		<!-- WHERE 절 검색 -->
		<dynamic prepend="where">
			<!-- 검색어 검색 -->
			<isNotEqual property="sval" compareValue="">
				<!-- 검색 타입이 all일 때 -->
				<isEqual property="stype" compareValue="all" prepend="and">
					( (member_pk in (select no from member where name like '%$sval$%')) or (movie_pk in (select no from movie where title like '%$sval$%') ) ) 					
				</isEqual>
				<!-- 검색 타입이 all이 아닐때 -->
				<isNotEqual property="stype" compareValue="all"> 
					<isEqual property="stype" compareValue="member_name" prepend="and">
					(member_pk in (select no from member where name like '%$sval$%'))
					</isEqual>
					<isEqual property="stype" compareValue="movie_title" prepend="and">
					(movie_pk in (select no from movie where title like '%$sval$%'))
					</isEqual>
				</isNotEqual>
				<isNotEqual property="smovie_pk" compareValue="0" prepend="and">
					movie_pk=#smovie_pk#
				</isNotEqual>
			</isNotEqual>
			<isNotEqual property="sdate" compareValue="">
				<isNotEqual property="edate" compareValue="" prepend="and">
					$dateType$ between '$sdate$ 00:00:00' and '$edate$ 23:59:59'
				</isNotEqual>
			</isNotEqual>
			<isNotEqual property="sres_state" compareValue="0" prepend="and">
				res_state = #sres_state#
			</isNotEqual>
			<isNotEqual property="spay_state" compareValue="0" prepend="and">
				pay_state = #spay_state#
			</isNotEqual>
			<isNotEqual property="spay" compareValue="0" prepend="and">
				pay = #spay#
			</isNotEqual>
		</dynamic>
	</sql>
	<select id="count" parameterClass="ticket1VO" resultClass="Integer">
        select count(*) from ticket1
        <include refid="searchSql" />	
    </select>
	
    <select id="list" parameterClass="ticket1VO" resultClass="ticket1VO">
       select * from ticket1
        select * ,
        (select title from movie where movie.no=ticket1.movie_pk) as movie_title,
        (select name from member where member.no=ticket1.member_pk) as member_name
        from ticket1
        <include refid="searchSql" />
		ORDER BY no DESC LIMIT $startPageNo$, $pageRows$	
    </select>
    
    <select id="read" parameterClass="Integer" resultClass="ticket1VO">
        SELECT *, 
        (select title from movie where movie.no=ticket1.movie_pk) as movie_title,
        (select name from member where member.no=ticket1.member_pk) as member_name
        FROM ticket1
        where no = #no#
    </select>
    
    <select id="date" resultClass="ticket1VO">
    <![CDATA[
    	select today, name as yoil from calendar
    	where today >= substring(now(), 1, 10)
    	and today < date_add(substring(now(),1,10), interval 14 day)
   	]]>    
    </select>
     
    <select id="aranMovieDate" parameterClass="Integer" resultClass="ticket1VO">
 		select today 
		from Calendar as c, movie as m
		where m.no = #no#
		 <![CDATA[
		and c.today >= m.releaseDate
		]]>
		 <![CDATA[
		and c.today <= m.endDate
		]]>
		 <![CDATA[
		and c.today >= substring(now(),1,10) 
		]]>  
		 <![CDATA[
		and c.today < date_add(substring(now(),1,10), interval 14 day)
		]]>
	
		ORDER BY c.today ASC 
     </select>
</sqlMap>