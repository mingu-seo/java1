<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="movie">
    
    <typeAlias alias="movie_vo" type="movie.MovieVo"/>
    <typeAlias alias="stillCut_vo" type="movie.StillCutVo"/>
    <typeAlias alias="trailer_vo" type="movie.TrailerVo"/>
    
    <!-- 공통조건 -->
	<sql id="searchSql">		
		<!-- WHERE 절 검색 -->
		<dynamic prepend="where">
			<isNotEqual property="sdisplay" compareValue="-1">
			    display = #sdisplay#
			</isNotEqual>
			<!-- 검색어 검색 -->
			<isNotEqual property="sval" compareValue="">
				<!-- 검색 타입이 all일 때 -->
				<isEqual property="stype" compareValue="all" prepend="and">
					( (name like '%$sval$%' ) or (contents like '%$sval$%' ) or (title like '%$sval$%' ) ) 					
				</isEqual>
				<!-- 검색 타입이 all이 아닐때 해당 stype으로 검색 -->
				<isNotEqual property="stype" compareValue="all" prepend="and">
					($stype$ like '%$sval$%' )
				</isNotEqual>
			</isNotEqual>
		</dynamic>
	</sql>
	
	<!-- 해당 테이블의 총 게시글 수 -->
	<select id="count" parameterClass="movie_vo" resultClass="Integer">
        select count(*) from $tablename$
        <include refid="searchSql" />	
    </select>
    
	<select id="list" parameterClass="movie_vo" resultClass="movie_vo">
        select *
        from $tablename$
        <include refid="searchSql" />
		ORDER BY releaseDate DESC LIMIT $startPageNo$, $pageRows$
    </select>
	
	<!-- 해당 테이블에 게시글 작성 -->
    <insert id="insert" parameterClass="movie_vo">
        INSERT INTO MOVIE(
        	title, director, genre, rating, runtime, releaseDate,
        	endDate, poster, display, contents
        ) VALUES (
        	#title#, #director#, #genre#, #rating#, #runtime#, #releaseDate#,
        	#endDate#, #poster#, #display#, #contents#
        )
        <selectKey keyProperty="no" resultClass="Integer">
        	SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    
    <!-- 해당 테이블에 스틸컷 첨부 -->
    <insert id="insert2" parameterClass="stillCut_vo">
        INSERT INTO STILLCUT (
        	movie_no, stillCut1, stillCut2, stillCut3, stillCut4, stillCut5, stillCut6 
        ) VALUES (
        	#movie_no#, #stillCut1#, #stillCut2#, #stillCut3#, #stillCut4#, #stillCut5#,
        	#stillCut6#
        )
        <selectKey keyProperty="no" resultClass="Integer">
        	SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    
    <!-- 해당 테이블에 게시글 작성 -->
    <insert id="insert3" parameterClass="trailer_vo">
        INSERT INTO TRAILER (
        	movie_no, trailer1, trailer2, trailer3, trailer4, trailer5, trailer6 
        ) VALUES (
        	#movie_no#, #trailer1#, #trailer2#, #trailer3#, #trailer4#, #trailer5#,
        	#trailer6#
        )
        <selectKey keyProperty="no" resultClass="Integer">
        	SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    
    <update id="update" parameterClass="movie_vo">
        UPDATE $tablename$ SET
        	title=#title#, display=#display#,
        <isNotEqual property="releaseDate" compareValue="">
       	    releaseDate = #releaseDate#,
       	</isNotEqual>     	
        <isEqual property="poster_chk" compareValue="1">
        	poster='', posterSize=0,
        </isEqual>
        <isNotEqual property="poster" compareValue="">
            <isNotNull property="poster">
        		poster=#poster#, posterSize=#posterSize#,
        	</isNotNull>
        </isNotEqual>
        	contents=#contents#
        WHERE no = #no#
    </update>
    
    <update id="stillCutUpdate" parameterClass="stillCut_vo">
        UPDATE STILLCUT SET
        	movie_no = #movie_no#
        <isNotNull property="stillCut1">
       	    ,stillcut1 = #stillCut1#
       	</isNotNull>     	
        <isNotNull property="stillCut2">
       	    ,stillcut2 = #stillCut2#
       	</isNotNull>     	
        <isNotNull property="stillCut3">
       	    ,stillcut3 = #stillCut3#
       	</isNotNull> 
        <isNotNull property="stillCut4">
       	    ,stillcut4 = #stillCut4#
       	</isNotNull>        	        	
        <isNotNull property="stillCut5">
       	    ,stillcut5 = #stillCut5#
       	</isNotNull>    
        <isNotNull property="stillCut6">
       	    ,stillcut6 = #stillCut6#
       	</isNotNull>        	    
        WHERE movie_no = #movie_no#
    </update>
    
    <update id="trailerUpdate" parameterClass="trailer_vo">
    	UPDATE TRAILER SET 
    	
    		movie_no = #movie_no#,
    		trailer1 = #trailer1#,
    		trailer2 = #trailer2#,
    		trailer3 = #trailer3#,
    		trailer4 = #trailer4#,
    		trailer5 = #trailer5#,
    		trailer6 = #trailer6#
    		 
    	WHERE movie_no = #movie_no#
    
    </update>
    
    <select id="read" parameterClass="movie_vo" resultClass="movie_vo">
        SELECT 
        	*
        FROM $tablename$
        where no = #no#
    </select>
    
    <select id="readStillCut" parameterClass="Integer" resultClass="stillCut_vo">
    SELECT *
    FROM STILLCUT
    where movie_no = #movie_no#
    </select>
    
    <select id="readTrailer" parameterClass="Integer" resultClass="trailer_vo">
    SELECT *
    FROM TRAILER
    where movie_no = #movie_no#
    </select>
    
    
    <select id="posternames" parameterClass="movie_vo" resultClass="movie_vo">
    	<![CDATA[
        SELECT 
        	file_name
        FROM $tablename$
        where no = #no#
        ]]>
    </select> 
        
    <select id="getRowNum" parameterClass="movie_vo" resultClass="Integer">
        select rownum from (
        	select @rownum:=@rownum+1 as rownum, no, title from $tablename$, (select @rownum:=0) as r
        	<include refid="searchSql" />
        	ORDER BY releaseDate DESC
        ) as r2
        where r2.no = #no#
    </select>
    
    <select id="getNextRowNum" parameterClass="movie_vo" resultClass="movie_vo">
        select ifnull(rownum,0), ifnull(no,0) as next_no, title as next_title
        from (
        	select @rownum:=@rownum+1 as rownum, no, title from $tablename$, (select @rownum:=0) as r
        	<include refid="searchSql" />
        	ORDER BY releaseDate DESC
        ) as r2
        <![CDATA[
        where r2.rownum = $rownum$+1
    	]]>
    </select>
    
    <select id="getPrevRowNum" parameterClass="movie_vo" resultClass="movie_vo">
    	select ifnull(rownum,0), ifnull(no,0) as prev_no, title as prev_title
        from (
        	select @rownum:=@rownum+1 as rownum, no, title from $tablename$, (select @rownum:=0) as r
        	<include refid="searchSql" />
        	ORDER BY releaseDate DESC
        ) as r2
        <![CDATA[
        where r2.rownum = $rownum$-1
    	]]>
    </select>
    
    <delete id="delete" parameterClass="movie_vo">
        DELETE FROM $tablename$ WHERE no=#no#
    </delete>
    
       
    <select id="mainList" parameterClass="movie_vo" resultClass="movie_vo">
        select *
        from $tablename$
        <include refid="searchSql" />
		ORDER BY releaseDate DESC LIMIT 0, $number$
    </select>
    
</sqlMap>